# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#               Integrated Modeling (IM) - MASTER NAMELIST
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# *******************************************************************************************************************
# Workflow and Main Files
# *******************************************************************************************************************

MITIMmode          = 1                      # 1: Full workflow, 2: just launch first phase, with no convergence limit
namelistBaselineFile = $STUDIES_PATH/information/IM_FILES/SPARC/im.baseline_SPARCV2  # File with engineering parameters
baseUFFolder         = None                   # If no equilibrium reconstruction or plasma with ECH, I need to know where MRY, LIM, THE and PHI are
baseNMFolder         = None                   # folder where TR.DAT is. If None: generate baseline namelist for this machine 

excelProfile         = $STUDIES_PATH/information/IM_FILES/SPARC/initialProfiles/V1E.xlsx     # Excel file to initialize (1st phase) Te, Ti, ne, q. V=0 and RBt and Ip not ramp
baseCDFfile          = $PROJECTS_PATH/required_data/initialCDFs/V1E_20200312.CDF             # If excelProfile=None, CDF file to initialize Te, Ti, ne, V, q, RBt, Ip
# (Note: Even if excelProfile is used instead of baseCDFfile, baseCDFfile is used for BetaN, shaping ratios and CoordinateMapping for Pedestal)

retriesMITIM       = 1     # How many times to run IM before I send FAIL flag
minWaitLook          = 30    # Minutes in between tr_look requests

# *******************************************************************************************************************
# Run Settings
# *******************************************************************************************************************

machine           = SPARC      # Select machine: SPARC, D3D, CMOD, AUG
shotnumber        = 98765
runidletter       = W
version           = pshare
mpis              = [32,32,32] # [NUBEAM,TORIC,TGLF]. If 1, deactivate. They are enabled as long as run allows it

TGLFsettings      = 1
useBcoil          = False
enforceICRFonaxis = False
useFinalTGLF      = False
PedestalUfiles    = True 
includeASH        = F
useRotationMach   = None # If not None, use data from this CDF to use rotation with Mach # in baseline

# *******************************************************************************************************************
# Initialization and phases
# *******************************************************************************************************************

# ~~~~~~~ Starting Conditions

restarttime             = [-1,-10,-10]	# Restart phase from: -1: top last saw, -2: last time, -3: middle last saws, >0: actual time, <0: before saw
RestartBaselineTime_YN 	= True          # If False, take directly the values from the U-File (ignore starting CDF)

# ~~~~~~~~~~ Phasing

separatePredictive      = T      # Run 2nd phase (for higher fidelity)
RunDoublePredictive     = T      # Run 3rd phase (for updated parameters)
DoubleInInterpretive    = T      # Run 3rd phase only until ftimeOffset, outputting OUTTIMES right before finishing (restarttime, ftimeOffsets are important)

DoubleInInterpretiveMinLength = 1.0 # seconds

# ~~~~~~~~~ Timings for 1st (ramps) phase

tinit                   = 0.0
BaselineTime            = 0.1    # Time to which all following offsets are applied

# ~~~~~~~~~ Offsets to help convergence at initialization

startCurDiff            =   5.0  # ms from the BaselineTime to enable current diffusion
startRamp               =   5.0  # ms from the BaselineTime to start ramp (equilibrium, Bt, Ip, pedestal)
startsawtooth           =  20.0  # ms from the BaselineTime to have the first sawtooth crash (if conditions met)
endRamp                 =  50.0  # ms from the BaselineTime

# Offsets related to heat transport prediction
startPower              =   5.0  # ms from the BaselineTime to inject power other than Ohmic
startPred               = -90.0  # ms from the BaselineTime to start Te, Ti, ne prediction
# (Note: if excelInitialization contains H-mode already, this can be > endRamp (and should have startPred > startPower), otherwise, it needs to be enabled < startRamp, and startPower should be later)
ftimeOffsets 	        = [1E4,1E4,5E2]  # Final time offsets (ms) for each phases

# ~~~~~~~~~ Timings for 2nd phase

CurrsecondOffset        =  50.0  # ms after start to enable current diffusion
SawsecondOffset         =  70.0  # ms after start to enable sawtooth crashes
PredsecondOffset        = 100.0

# ~~~~~~~~~~ Termination (array indicates per phase, except variables)

minTimes                = [1.5,-1.0,-1.0]   # Minimum predictive seconds (if <0, this number of taue from previous)
conv_num                = [-2,2,2]              # Number of times to check (if <0, then only check this # of sawteeth)
conv_vars               = [Q95,VarPRF_Q,VarPRF_TE_0,VarPRF_NE_0,VarPRF_TI_0,VarPRF_TE,VarPRF_NE,VarPRF_TI]
conv_tol                = [3.0E-2,3.0E-2,3.0E-2]  # Tolerance variation (if 0, then run until FTIME)

# *******************************************************************************************************************
# Modules Settings
# *******************************************************************************************************************

# ~~~~~~~ Impurities

impurityMode = 1        # 0: Standard specification (in BASELINE_, specify fractions)
                        # 1: Only use high-Z (1st values) and fDT below to get low-Z (as 0 but modify Z2 to match fDT)
                        # 2: Impurities ufile (in pickles), ignoring Zeff
                        # 3: impurity ufile for 1st impurity (in pickle) and using zeff profile to constrain 2nd impurity, which needs fDT

zimp_high    = 50       # If impurityMode = 1,3:  Volume average Z for the high-Z impurity
fmain_avol   = 0.85     # If impurityMode = 1,3:  Volume average main ion dilution
imp_profs    = [,]      # If impurityMode = 2, 3: Location of pickle files for each impurity

# ~~~~~~~ Fast ions transport

fast_anom    = None     # If not None, use this pickle file with anomalous D and V for fast ions

# ~~~~~~~ Minority density

min_dens     = None     # If None: use FMINI from baseline. Ifnot None, use this pickle file with profile

# ~~~~~~~ Parameters to keep constant

enforce_Ip    = False   # if True, change Ip to keep qPRF constant
qPRF          = 3.804   # value of q-star evaluated with kappa&delta at the separatrix (V1E: 3.804). If None and PedestalType is LuT or Vals, I use the Ip given there
enforce_neped = False   # if True, change neped to keep nPRF constant
nPRF          = 0.32    # value of Greenwald fraction for neped (v0 34.5: 0.3612, v1 0.33, v1C: 0.32)

# ~~~~~~~ Equilibrium settings

EquilibriumType         = gfile   # None (MRY,LIM from baseline run; VV in NML), miller or gfile (extract boundary from g-file)
changeHeatingHardware   = True    # If False, use nml antennas/beams location, do  not change with geometry

advancedEQ              = 0       # 0: Standard single gfile; 1: TSC-gfile at prescribedEvolutionTimes; 2: Divertor sweep at EQsweepHz

# OPTION >>> Standard (advancedEQ = 0)
gfile_loc       	    = $STUDIES_PATH/information/IM_FILES/SPARC/gfiles/geqdskV1E-20200103
UseGFILEgeometryParams 	= True   # if True and EquilibriumType = gfile, get R-eps-d-k from LCFS (for pedestal and enforcement calculations)
                                 # if False, either use Pedestal_Redk or the values given as Baseline
                                 
# OPTION >>> TSC (advancedEQ = 1)
prescribedEvolution       = None     # TSC g-file\ for the times in prescribedEvolutionTimes
prescribedEvolutionTimes  = [0.25, 0.50, 0.75, 1.00, 2.00, 3.00, 4.00, 5.00, 6.50, 8.00,8.65]

# OPTION >>> Sweep (advancedEQ = 2)
prescribedEvolution	   = [$STUDIES_PATH/information/IM_FILES/SPARC/gfiles/geqdskV1E-20200103,$STUDIES_PATH/information/IM_FILES/SPARC/gfiles/V1E_geqdsk_a,$STUDIES_PATH/information/IM_FILES/SPARC/gfiles/V1E_geqdsk_g] 	# List of g-files (first is original, then two next ones are extremes)
EQsweepStart		   = 16.0	# Start sweep
EQsweepHz 		       = 1 	    # Hz

# ~~~~~~~ q-profile settings

Initialq_gfile         = False # If EquilibriumType = gfile, I can grab the q-profile from the gfile and use it as starting point
Reinitialize_q         = False
specialqprofile        = None
specialqprofile_time   = None

# ~~~~~~~ Pedestal Settings

Pedestal_Redk          = None    # Use this [R,eps,d,k] to evaluate pedestal. If None, use baseline values below or DVs. e.g. [1.78,0.309,0.45,1.92]
#(Note: If this option is enabled, MITIM will ignore BASELINE_*. If also the values belong to DVs (params*), keep ratio between Pedestal_Redk and BASELINE_*)

PedestalType 	       = lut 	# lut (Look-up-Table), nn (neural net), vals (manual values), surrogate_model (Pytorch)
UseShapingRatio        = True 	# If True, pedestal evaluation will use flux ratio (TRANSP-smoothed separatrix to 99.5% surface) from the previous phase to scale d & k
PedestalShape          = 2       # 0= Straight line, 1= Original, 2= New mtanh

# OPTION >>> Look-up-Table parameters

LuT_loc                = $STUDIES_PATH/information/IM_FILES/SPARC/EPED_runs/V1E_20200128/eped_nped.out
LuT_variables          = [neped]     #Options: [Bt,Ip,Rmajor,delta,Zeff,neped,BetaN]
LuT_fixed              = [0]

# OPTION >>> Manual input parameters (LuT_vals = [eV_height,psi_width,dens_height,Ip])

LuT_vals               = [4270.0,0.063,3.03E20,8.7]

# OPTION >>> Neural net parameters

nn_loc                 = /home/nthoward/sparc_model/Data/EPED_nn/weights_v0/

# OPTION >>> None

PedestalBC             = 0.85

# ~~~~~~~~~ L->H Transition

#LHtransition 	= 10.0
#Lvalues 	= [2.0,25.0]  # n20,?

TimeImposedPedestal     = None             # If no LHtransition, use restarted profiles until this time, then pedestal. If None, long transition during eq-ramp for interpretive and 50ms before predictive in predictive mode

# ~~~~~~~~~ Density options

timeLagDensity         = 5	               # If -1: no density prediction, if >0: ms to wait after temperatures are predicted
SpecialDensityUFILE    = None              #/home/nthoward/sparc_model/sim1_Improvements/Execution/Evaluation.0/FolderTRANSP/175844R13.CDF
OfflineDensity         = False             # if timeLagDensity = -1 and SpecialDensityUFILE = None, then predict with collisionality scaling if True 

SmoothInitialProfiles  = [False,True,True] # For each phase, if True: smooth kinetic profiles from previous run and freeze temperature predictions

# ~~~~~~~~~~ Transport Settings

TransportModels         = [GLF23,TGLF]	   # None (no predictive), GLF23 or TGLF
useAxialTrickPhases     = [False,True]
rotationPred            = False
pedestalPred            = False
